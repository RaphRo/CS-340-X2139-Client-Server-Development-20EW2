# CS-340-X2139-Client-Server-Development-20EW2

How do you write programs that are maintainable, readable, and adaptable? Especially consider your work on the CRUD Python module from Project One, which you used to connect the dashboard widgets to the database in Project Two. What were the advantages of working in this way? How else could you use this CRUD Python module in the future?


I think using enccapsulation is a primary way to write code that is repeatable, readable, a nd adaptable. I say this because by encapsulating the code it can be implemented elsewhere and easily to enable other projects. Thinking back to this assignment by taking and seperating the data step from the dashboard you could reuse the data element for other things. Further by using a standard dictionary imput and staying with standard formats you can avoid over specifising the code to make it to much of a unit task tool. Finally reguarding readability I think it is the belief of many developers that they should write highly readable code (that is code that is clear and requires minimal comments) while I seak to do this often I also believe it is important to annotate ways in the base code that it could be improved and enhanced, i.e. suggestions for future contributors. Working in a modular framework and building packages makes it easier to contribute in the future which I am a fan of. Finally the crud module is very eyeopening Im not sure I will always be able to get it configured but I really could see it being reused whenever Im dealing with mongoDB since it gives me a way to exfaltrate my data. 

How do you approach a problem as a computer scientist? Consider how you approached the database or dashboard requirements that Grazioso Salvare requested. How did your approach to this project differ from previous assignments in other courses? What techniques or strategies would you use in the future to create databases to meet other client requests?

This questions seems a bit ephemeral. As a computer scientist I approach problem solving in pieces. I think about what tools I need to get a job done and I start from there. I thing great work would be to document the list of tools you need to solve a problem and then building until you reach finality. In addition I think it is important to tackle things requirement by requirement. For this assignment I focused on handling each requirement in order and then enhancing them once I was able to get the functionality I wanted. One nice part about jupyter notebooks is that you can split your code frame to implement testing along the way. I did this often running and rerunning statements to verify that I would get the results I wanted. I probably ran the dashboard 300  times and verified at every requirement. Then once the requirement was satisfied i would move on. Towards the end of the assigment I did start having problems with the virtual lab. Otherwise I would have spent more time reviewing and cleanup. 

What do computer scientists do, and why does it matter? How would your work on this type of project help a company, like Grazioso Salvare, to do their work better?

Again very ephemeral question. Computer Scientists build tools, widgets, and applications on computers. Some specialize in data science and build reports wroking similar to a full stack developer in that they need tro process interpret and show data. Some specialize in systems, like database administrators and system admins, in a lot of ways this work is about configuring and enabling systems to interact with each other. Finally some develop software these are app developers, programmers, testers, and other software developers that build applications from the ground up. I think this work is very similar to data science work. Graziano will benefit from having a dashboard they can turn to for researching and finding service animals. Since it is connected directly to the data it is a low maintenance tool that offers some features for them to work with. Also because it was worked on in dash its modular and the table is interactive giving users freedom to work with the product. I think Dash was a great tool for this project and one I want to take to work with me. I want to demo its capability and build tools that are flexible for the team. I will say I think the reporting model where a client comes to a programmer and asks for a report in a timeframe that has static requirements is probably dieing off to more rapid prototyping and development. That is why for the most part data scientists are not programmers but typically people with graduate level stem education.
